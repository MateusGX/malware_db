using System;
using System.Security.Cryptography;
using System.Xml;
using System.IO;
namespace Malware_DB
{
    class Program
    {
        static void Main(string[] args)
        {
            Config config = new Config();
            do {
                Console.Clear();
                Console.WriteLine(" Malware_DB by MateusGX");
                if (config.loginError)
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine(" Invalid login or password!");
                    Console.ResetColor();
                }
                Console.Write(" login:");
                config.user = Console.ReadLine();
                Console.Write(" password:");
                config.pass = Console.ReadLine();
            } while (new Authentication(config).isValid());
            Console.Clear();

            config.mwKey = Convert.FromBase64String("rjFykDMnDfa2LrO+611ZEeTlKkrLEjDmSWwVaHHiBkw=");
            config.mwIV = Convert.FromBase64String("Q6MNmemyG5yGSfzw8oYjdA==");
            config.contentKey = Convert.FromBase64String("Ebwsc/pp3ZocExzh7V2lq+NVOffF+ERY+8tThSkgqzI=");
            config.contentIV = Convert.FromBase64String("ZYP8hkLWpocXhNbH/bDrnQ==");
            Functions functions = new Functions(config);

            XmlDocument xml = new XmlDocument();
            string content = "";
            string line;
            int p = 0;
            int _progress, _pOld = 0;
            _pOld = -1;
            StreamReader file = new StreamReader("data.mgx");
            while ((line = file.ReadLine()) != null)
            {
                content += line;
                p++;
                _progress = (int)((p * 100) / 3435);
                if (_progress != _pOld)
                {
                    Console.Clear();
                    functions.progress(_progress);
                    _pOld = _progress;
                }
            }
            xml.LoadXml("data.mgx");

            functions.showTitle();
            while (true)
            {
                string[] command = functions.readLine();
                if (!functions.runCommand(command))
                {
                    functions.writeLine("Command not found!", Functions.wType.Error);
                }
            }
        }
    }
}
