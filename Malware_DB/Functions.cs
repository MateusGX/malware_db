using System;
using System.Collections.Generic;
using System.Text;
using System.Threading;

namespace Malware_DB
{
    class Functions
    {
        public enum wType { Error, Info, Success, Default }
        public Config data;
        public Functions(Config config)
        {
            data = config;
        }
        public void showTitle()
        {
            Console.WriteLine(@"
 ███╗   ███╗ █████╗ ██╗     ██╗    ██╗ █████╗ ██████╗ ███████╗        ██████╗ ██████╗ 
 ████╗ ████║██╔══██╗██║     ██║    ██║██╔══██╗██╔══██╗██╔════╝        ██╔══██╗██╔══██╗
 ██╔████╔██║███████║██║     ██║ █╗ ██║███████║██████╔╝█████╗          ██║  ██║██████╔╝
 ██║╚██╔╝██║██╔══██║██║     ██║███╗██║██╔══██║██╔══██╗██╔══╝          ██║  ██║██╔══██╗
 ██║ ╚═╝ ██║██║  ██║███████╗╚███╔███╔╝██║  ██║██║  ██║███████╗███████╗██████╔╝██████╔╝
 ╚═╝     ╚═╝╚═╝  ╚═╝╚══════╝ ╚══╝╚══╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚══════╝╚═════╝ ╚═════╝ 
 by MateusGX
");
        }
        public string[] readLine()
        {
            Console.ForegroundColor = ConsoleColor.Red;
            Console.Write(" ╔═[");
            Console.ForegroundColor = ConsoleColor.Cyan;
            Console.Write(data.user);
            Console.ForegroundColor = ConsoleColor.Red;
            Console.Write("]═[");
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.Write("~");
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine("]");
            Console.Write(" ╚═══>");
            Console.ResetColor();
            string input = Console.ReadLine();
            return input.Split(' ');
        }
        public bool runCommand(string[] command)
        {
            if (command[0] == "help")
            {
                writeLine("==== SYSTEM ====", wType.Success);
                writeLine("help", wType.Success, "List all commands");
                writeLine("clear", wType.Success, "Clear console");
                writeLine("exit", wType.Success, "Exit application", true);
                writeLine("==== APP ====", wType.Success);
                writeLine("show_all", wType.Success, "Show all malware");
                writeLine("select", wType.Success, "Select malware: select ID");
                writeLine("get_data", wType.Success, "Returns information about the malware");
                writeLine("update", wType.Success, "Updates the database and the application");
                writeLine("binaries", wType.Success, "Gets the executable of the selected malware (DANGER)");
                writeLine("source", wType.Success, "Gets the source code of the selected malware", true);
                return true;
            }
            else if (command[0] == "clear")
            {
                Console.Clear();
                Console.Write("\n");
                return true;
            }
            else if (command[0] == "exit")
            {
                writeLine("Bye!", wType.Success);
                Thread.Sleep(1000);
                Environment.Exit(0);
                return true;
            }
            else if (command[0] == "show_all")
            {

            }
            else if (command[0] == "select")
            {

            }
            else if (command[0] == "get_data")
            {

            }
            else if (command[0] == "update")
            {

            }
            else if (command[0] == "binaries")
            {

            }
            else if (command[0] == "source")
            {

            }
            return false;
        }
        public void writeLine(string content, wType type, string info = "", bool lb = false)
        {
            if (type == wType.Error)
            {
                Console.ForegroundColor = ConsoleColor.Red;
            }
            else if (type == wType.Info)
            {
                Console.ForegroundColor = ConsoleColor.Cyan;
            }
            else if (type == wType.Success)
            {
                Console.ForegroundColor = ConsoleColor.Yellow;
            }
            else if (type == wType.Default)
            {
                Console.ForegroundColor = ConsoleColor.White;
            }
            Console.WriteLine(" " + content);
            if (info != "")
            {
                Console.ForegroundColor = ConsoleColor.Cyan;
                Console.Write("   " + info);
            }
            if (lb)
            {
                Console.Write("\n\n");
            }
            else
            {
                Console.Write("\n");
            }
            Console.ResetColor();
        }
        public void progress(int _progress)
        {
            Console.ForegroundColor = ConsoleColor.Red;
            Console.Write("\n[");
            for (int i = 0; i < _progress; i++)
            {
                Console.Write("#");
            }
            Console.Write("] - " + _progress + "%\n");
        }
    }
}
